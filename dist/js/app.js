var app = angular.module('app', [])

angular.module('app')
    .controller('MyController', ["$scope", "albumsData", "$filter", function ($scope, albumsData, $filter){

        $scope.currentPage = 0;
        $scope.pageSize = 20;

        $scope.getTotalPage = function() {
            $scope.totalPages = Math.ceil($scope.albums.length/$scope.pageSize);
            return $scope.totalPages;
        };

        function getAlbums() {

            albumsData.getDetails()
                .success(function(albums){
                    $scope.albums = albums;
                })
                .error(function (error) {
                    console.log('something went wrong');
                })
        };

        getAlbums();
    }])


angular.module('app')
    .factory('albumsData', ['$http', function ($http) {

        var url = 'http://jsonplaceholder.typicode.com/photos';
        var albumsData = {};

        albumsData.getDetails = function () {
            return $http.get(url);
        }
        return albumsData;
    }])


angular.module('app')
    .filter('startFrom', function() {

        return function(input, start) {
            if (!input || !input.length) { return; }
            start = +start; 

            return input.slice(start);
        }
    });

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbnRyb2xsZXIuanMiLCJmYWN0b3J5LmpzIiwiZmlsdGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsTUFBQSxRQUFBLE9BQUEsT0FBQTs7QUNBQSxRQUFBLE9BQUE7S0FDQSxXQUFBLG9EQUFBLFVBQUEsUUFBQSxZQUFBLFFBQUE7O1FBRUEsT0FBQSxjQUFBO1FBQ0EsT0FBQSxXQUFBOzs7Ozs7O1FBT0EsT0FBQSxlQUFBLFdBQUE7WUFDQSxPQUFBLGFBQUEsS0FBQSxLQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUE7WUFDQSxPQUFBLE9BQUE7Ozs7Ozs7O1FBUUEsU0FBQSxZQUFBOzs7Ozs7O1lBT0EsV0FBQTtpQkFDQSxRQUFBLFNBQUEsT0FBQTtvQkFDQSxPQUFBLFNBQUE7O2lCQUVBLE1BQUEsVUFBQSxPQUFBO29CQUNBLFFBQUEsSUFBQTs7U0FFQTs7UUFFQTs7Ozs7Ozs7O0FDL0JBLFFBQUEsT0FBQTtLQUNBLFFBQUEsY0FBQSxDQUFBLFNBQUEsVUFBQSxPQUFBOztRQUVBLElBQUEsTUFBQTtRQUNBLElBQUEsYUFBQTs7Ozs7Ozs7UUFRQSxXQUFBLGFBQUEsWUFBQTtZQUNBLE9BQUEsTUFBQSxJQUFBOztRQUVBLE9BQUE7Ozs7Ozs7OztBQ2ZBLFFBQUEsT0FBQTtLQUNBLE9BQUEsYUFBQSxXQUFBOztRQUVBLE9BQUEsU0FBQSxPQUFBLE9BQUE7WUFDQSxJQUFBLENBQUEsU0FBQSxDQUFBLE1BQUEsUUFBQSxFQUFBO1lBQ0EsUUFBQSxDQUFBOztZQUVBLE9BQUEsTUFBQSxNQUFBOzs7QUFHQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ2FwcCcsIFtdKVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4gICAgLmNvbnRyb2xsZXIoJ015Q29udHJvbGxlcicsIGZ1bmN0aW9uICgkc2NvcGUsIGFsYnVtc0RhdGEsICRmaWx0ZXIpe1xuXG4gICAgICAgICRzY29wZS5jdXJyZW50UGFnZSA9IDA7XG4gICAgICAgICRzY29wZS5wYWdlU2l6ZSA9IDIwO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAbmFtZSBnZXRUb3RhbFBhZ2VcbiAgICAgICAgICogQGRlc2MgR2V0cyB0aGUgbnVtYmVyIG9mIHBhZ2VzIHdoZW4gdGhlIHBhZ2luYXRpb24gb3B0aW9uIGNoYW5nZXNcbiAgICAgICAgICogQHJldHVybnMge051bWJlcn1cbiAgICAgICAgICovXG4gICAgICAgICRzY29wZS5nZXRUb3RhbFBhZ2UgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICRzY29wZS50b3RhbFBhZ2VzID0gTWF0aC5jZWlsKCRzY29wZS5hbGJ1bXMubGVuZ3RoLyRzY29wZS5wYWdlU2l6ZSk7XG4gICAgICAgICAgICByZXR1cm4gJHNjb3BlLnRvdGFsUGFnZXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBuYW1lIGdldEFsYnVtc1xuICAgICAgICAgKiBAZGVzYyBHZXRzIHRoZSBhcnJheSBvZiBvYmplY3QgdG8gdXNlIGluIHRoZSB0ZW1wbGF0ZVxuICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9XG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBnZXRBbGJ1bXMoKSB7XG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogQG5hbWUgZ2V0RGV0YWlsc1xuICAgICAgICAgICAgICogQGRlc2MgQSBtZXRob2QgZGVmaW5lZCBpbiBmYWN0b3J5IHRoYXQgcmV0cml2ZXMgZGF0YSBmcm9tIEFQSVxuICAgICAgICAgICAgICogQHJldHVybnMge09iamVjdH1cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgYWxidW1zRGF0YS5nZXREZXRhaWxzKClcbiAgICAgICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihhbGJ1bXMpe1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuYWxidW1zID0gYWxidW1zO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmVycm9yKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnc29tZXRoaW5nIHdlbnQgd3JvbmcnKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICB9O1xuXG4gICAgICAgIGdldEFsYnVtcygpO1xuICAgIH0pXG4iLCIvKipcbiAqIEBuYW1lIGFsYnVtc0RhdGFcbiAqIEBkZXNjIEFuZ3VsYXIgZGlyZWN0aXZlIHRoYXQgY29tbXVuaWNhdGVzIHdpdGggdGhlIEFQSVxuICogQHJldHVybnMge09iamVjdH1cbiAqL1xuXG5hbmd1bGFyLm1vZHVsZSgnYXBwJylcbiAgICAuZmFjdG9yeSgnYWxidW1zRGF0YScsIFsnJGh0dHAnLCBmdW5jdGlvbiAoJGh0dHApIHtcblxuICAgICAgICB2YXIgdXJsID0gJ2h0dHA6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3Bob3Rvcyc7XG4gICAgICAgIHZhciBhbGJ1bXNEYXRhID0ge307XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBuYW1lIGdldERldGFpbHNcbiAgICAgICAgICogQGRlc2MgTWV0aG9kIHRoYXQgcmV0dXJucyB0aGUgQXJyYXkgb2Ygb2JqZWN0LiBXaWxsIGJlIGNhbGxlZCBpblxuICAgICAgICAgKiAgICAgICBDb250cm9sbGVyXG4gICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9XG4gICAgICAgICAqL1xuICAgICAgICBhbGJ1bXNEYXRhLmdldERldGFpbHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KHVybCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFsYnVtc0RhdGE7XG4gICAgfV0pXG4iLCIvKipcbiAqIEBuYW1lIHN0YXJ0RnJvbVxuICogQGRlc2MgQ3VzdG9tIEZpbHRlciB0aGF0IGRpc3BsYXlzIGl0ZW1zIGJhc2VkIG9uIHBhZ2luYXRpb25cbiAqIEByZXR1cm5zIHtBcnJheX1cbiAqL1xuXG5hbmd1bGFyLm1vZHVsZSgnYXBwJylcbiAgICAuZmlsdGVyKCdzdGFydEZyb20nLCBmdW5jdGlvbigpIHtcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24oaW5wdXQsIHN0YXJ0KSB7XG4gICAgICAgICAgICBpZiAoIWlucHV0IHx8ICFpbnB1dC5sZW5ndGgpIHsgcmV0dXJuOyB9XG4gICAgICAgICAgICBzdGFydCA9ICtzdGFydDsgLy9wYXJzZSB0byBpbnRcblxuICAgICAgICAgICAgcmV0dXJuIGlucHV0LnNsaWNlKHN0YXJ0KTtcbiAgICAgICAgfVxuICAgIH0pO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
